import pandas as pd
import os


class SaveTwitterData(object):
    """
    Saves data generated by functions in the project.
    Args:
        - data (df or JSON): Data that will be saved. It can be JSON or pandas dataframe
        - save_path (str): Path where data will be saved
        - keyword (str): Hashtag, Twitter account, or query
        - folder_name (str): Name of the folder that will be created within save path to save data
        - filename (str): Name of the file that will be saved
        - replace (boolean): If true, the new data overwrites old data. If false, function reads original
                             data, concatenates new data, and saves old plus new data.
    """
    def __init__(self, data, save_path, keyword, folder_name, filename, replace):
        # Define filename and save path
        self.data = data
        self.replace = replace
        self.save_path = os.path.expanduser(f'{save_path}/{keyword}/{folder_name}')
        self.save_filename = f'{self.save_path}/{filename}.csv'

    def save_data(self):
        # Check argument "replace". If True, just replace dataframe with new dataframe, but
        # if False, update current dataframe with new dataframe
        if self.replace:
            if not os.path.exists(self.save_path):
                os.makedirs(self.save_path)
            self.data.to_csv(self.save_filename, index=False)

        else:
            # Check if folder file and folder already exist
            try:
                original_data = pd.read_csv(self.save_filename, engine='python')
                final_data = pd.concat([original_data, self.data], ignore_index=True)
                final_data.to_csv(self.save_filename, index=False)
            # If file doesn't exist, create the folder and create file
            except FileNotFoundError:
                if not os.path.exists(self.save_path):
                    os.makedirs(self.save_path)
                self.data.to_csv(self.save_filename, index=False)
            except pd.errors.EmptyDataError:
                if not os.path.exists(self.save_path):
                    os.makedirs(self.save_path)
                self.data.to_csv(self.save_filename, index=False)
